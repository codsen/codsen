name: Codsen CI

on:
  push:
    branches: ["main"]

permissions:
  id-token: write # Required for OIDC
  contents: read

jobs:
  build:
    name: Codsen Release
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to push commits

    steps:
      - name: prepare
        run: |
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.YOUR_NAME_SURNAME }}"

      - name: check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          registry-url: "https://registry.npmjs.org"

      - name: Configure npm for OIDC
        run: |
          echo "Setting up OIDC authentication..."
          npm config set //registry.npmjs.org/:_authToken "system"

      - name: install dependencies
        run: npm ci

      - name: build no.1
        run: npm run build

      # "unit" + "examples" + "lint" (which, in turn, depend on "build"):
      - name: prep
        run: npm run prep

      - name: generate statistics files
        run: npm run ci:generate:info

      - name: build root-level Readme
        run: npm run ci:build:root-readme

      - name: git-add the build artefacts
        run: |
          git status
          git add packages
          git add ops
          git add data
          git add README.md

      - name: git-add lockfile
        run: |
          git add package-lock.json
          git diff-index --quiet HEAD || git commit -m 'chore: automated build tasks [skip ci]' --no-verify

      - name: lerna version
        run: npm run ci:lerna:version

      - name: clean the changelogs
        run: npm run lernacleanchangelog

      # PS. above, we don't push git tags because
      # if something goes wrong further (and there is another build coming)
      # then we'd have problems.
      #
      # Now build again, because those bumped versions need to be written into header comment blocks:
      - name: build no.2
        run: npm run build

      # it will save down the latest dep version in perf/historical.json
      - name: run perf
        run: |
          echo "Skipping perf for now"

      - name: git-add the build artefacts
        run: |
          git status
          git add packages
          git add ops
          git add data
          git add README.md
          git diff-index --quiet HEAD || git commit -m 'chore: automated build tasks [skip ci]' --no-verify

      - name: remove type=module from CJS packages
        run: npm run cjs-on

      - name: publish all packages to npm
        run: npm run letspublish --workspace=packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: restore type=module in CJS packages
        run: npm run cjs-off

      - name: push no.1 to git remote
        run: |
          git push
          git push origin --tags

      - name: build and publish @codsen/data
        run: |
          npm run ci:generate:info
          npm run ci:generate:changelogs
          cd data
          npm run build
          git add .
          cd ..
          git diff-index --quiet HEAD || git commit -m 'chore: automated build tasks [skip ci]' --no-verify
          cd data
          npm run publ
          cd ..
          git status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: push no.2 to git remote
        run: |
          git push
          git push origin --tags
