{"all-named-html-entities":{"version":"2.0.7","description":"List of all named HTML entities","bin":false,"lect":{"licence":{"extras":[""]},"req":"{\n  allNamedEntities,\n  entStartsWith,\n  entEndsWith,\n  entStartsWithCaseInsensitive,\n  entEndsWithCaseInsensitive,\n  brokenNamedEntities,\n  decode,\n  minLength,\n  maxLength,\n  uncertain\n}","various":{"devDependencies":["type-fest"]}}},"array-group-str-omit-num-char":{"version":"5.0.7","description":"Groups array of strings by omitting number characters","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ groupStr }","various":{"devDependencies":["@types/lodash.uniq"]}}},"array-includes-with-glob":{"version":"4.0.7","description":"Like _.includes but with wildcards","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ includesWithGlob }","various":{"devDependencies":[]}}},"array-of-arrays-into-ast":{"version":"3.0.7","description":"Turns an array of arrays of data into a nested tree of plain objects","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ generateAst }","various":{"devDependencies":[]}}},"array-of-arrays-sort-by-col":{"version":"4.0.7","description":"Sort array of arrays by column, rippling the sorting outwards from that column","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ sortByCol }","various":{"devDependencies":["array-shuffle"]}}},"array-pull-all-with-glob":{"version":"6.0.7","description":"Like _.pullAll but with globs (wildcards)","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ pull }","various":{"devDependencies":[]}}},"arrayiffy-if-string":{"version":"4.0.7","description":"Put non-empty strings into arrays, turn empty-ones into empty arrays. Bypass everything else.","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ arrayiffy }","various":{"devDependencies":[]}}},"ast-compare":{"version":"3.0.7","description":"Compare anything: AST, objects, arrays, strings and nested thereof","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ compare }","various":{"devDependencies":["@types/lodash.isplainobject","@types/type-detect","type-fest"]}}},"ast-contains-only-empty-space":{"version":"3.0.7","description":"Does AST contain only empty space?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ empty }","various":{"devDependencies":[]}}},"ast-deep-contains":{"version":"4.0.7","description":"Like t.same assert on array of objects, where element order doesn't matter.","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ deepContains }","various":{"devDependencies":["@types/lodash.isplainobject","@types/object-path"]}}},"ast-delete-object":{"version":"3.0.7","description":"Delete all plain objects in AST if they contain a certain key/value pair","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ deleteObj }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"ast-get-object":{"version":"3.0.7","description":"Getter/setter for nested parsed HTML AST's, querying objects by key/value pairs","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ getObj }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"ast-get-values-by-key":{"version":"4.0.7","description":"Extract values and paths from AST by keys OR set them by keys","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ getByKey }","various":{"devDependencies":["@types/lodash.clonedeep","object-path"]}}},"ast-is-empty":{"version":"3.0.7","description":"Find out, is nested array/object/string/AST tree is empty","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isEmpty }","various":{"devDependencies":["@types/lodash.isplainobject"]}}},"ast-loose-compare":{"version":"3.0.7","description":"Compare anything: AST, objects, arrays and strings","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ looseCompare }","various":{"devDependencies":["@types/lodash.isplainobject"]}}},"ast-monkey":{"version":"8.0.7","description":"Traverse and edit AST","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ find, get, set, drop, info, del, arrayFirstOnly, traverse }","various":{"devDependencies":["type-fest"]}}},"ast-monkey-traverse":{"version":"3.0.7","description":"Utility library to traverse AST","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ traverse }","various":{"devDependencies":["@types/lodash.isplainobject","lodash.isequal","object-path"]}}},"ast-monkey-traverse-with-lookahead":{"version":"3.0.7","description":"Utility library to traverse AST, reports upcoming values","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ traverse }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"ast-monkey-util":{"version":"2.0.7","description":"Utility library of AST helper functions","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ pathNext, pathPrev, pathUp }","various":{"devDependencies":["@rollup/plugin-typescript","lodash.isequal","object-path"]}}},"bitbucket-slug":{"version":"3.0.7","description":"Generate BitBucket readme header anchor slug URLs. Unofficial, covers whole ASCII and a bit beyond.","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ bSlug }","various":{"devDependencies":["@types/lodash.deburr"]}}},"charcode-is-valid-xml-name-character":{"version":"2.0.7","description":"Does a given character belong to XML spec's \"Production 4 OR 4a\" type (is acceptable for XML element's name)","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isProduction4, isProduction4a, validFirstChar, validSecondCharOnwards }","various":{"devDependencies":[]}}},"check-types-mini":{"version":"7.0.7","description":"Validate options object","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ checkTypesMini }","various":{"devDependencies":["@types/lodash.intersection","@types/lodash.pullall"]}}},"codsen-parser":{"version":"0.12.7","description":"Parser aiming at broken or mixed code, especially HTML & CSS","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ cparser }","various":{"devDependencies":[]}}},"codsen-tokenizer":{"version":"6.0.7","description":"HTML and CSS lexer aimed at code with fatal errors, accepts mixed coding languages","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ tokenizer }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"color-shorthand-hex-to-six-digit":{"version":"4.0.7","description":"Convert shorthand hex color codes into full","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ conv }","various":{"devDependencies":["@types/hex-color-regex","@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"csv-sort":{"version":"6.0.7","description":"Sorts double-entry bookkeeping CSV coming from internet banking","bin":false,"lect":{"licence":{"extras":["","List of [currency signs](https://github.com/bengourley/currency-symbol-map) - Copyright Â© 2017 Ben Gourley - see its [BSD-2-Clause disclaimer](https://opensource.org/licenses/BSD-2-Clause)"]},"req":"{ sort }","various":{"devDependencies":["@types/lodash.pull"]}}},"csv-sort-cli":{"version":"2.0.7","description":"Command line app to sort double-entry CSVs coming from internet banking statements","bin":{"csvsort":"cli.js","sortcsv":"cli.js"},"lect":{"licence":{"extras":[""]},"various":{"devDependencies":["@types/lodash.pullall","@types/lodash.uniq","fs-extra"]}}},"csv-split-easy":{"version":"6.0.7","description":"Splits the CSV string into array of arrays, each representing a row of columns","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ splitEasy }","various":{"devDependencies":[]}}},"detect-is-it-html-or-xhtml":{"version":"5.0.7","description":"Answers, is the string input string more an HTML or XHTML (or neither)","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ detectIsItHTMLOrXhtml }","various":{"devDependencies":[]}}},"detect-templating-language":{"version":"3.0.7","description":"Detects various templating languages present in string","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ detectLang }","various":{"devDependencies":[]}}},"detergent":{"version":"8.0.7","description":"Extracts, cleans and encodes text","bin":false,"lect":{"licence":{"extras":["","Passes unit tests from https://github.com/kemitchell/straight-to-curly-quotes.json, licenced under CC0-1.0"]},"req":"{ det, opts, version }","various":{"devDependencies":["lodash.clonedeep","object-path","test-mixer"]}}},"easy-replace":{"version":"5.0.7","description":"Replace strings with optional lookarounds, but without regexes","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ er }","various":{"devDependencies":[]}}},"edit-package-json":{"version":"0.5.7","description":"Edit package.json without parsing, as string, to keep the formatting intact","bin":false,"lect":{"licence":{"extras":["","Passes adapted .set() unit tests from https://github.com/mariocasciaro/object-path/blob/master/test.js, MIT Licence Copyright (c) 2015 Mario Casciaro"]},"req":"{ set, del }","various":{"devDependencies":["ast-monkey-traverse","globby","lodash.clonedeep","object-path","p-map"]}}},"email-all-chars-within-ascii":{"version":"4.0.7","description":"Scans all characters within a string and checks are they within ASCII range","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ within }","various":{"devDependencies":[]}}},"email-all-chars-within-ascii-cli":{"version":"2.0.7","description":"Command line app to scan email templates, are all their characters within ASCII range","bin":{"ascii":"cli.js","tinaturner":"cli.js","withinascii":"cli.js"},"lect":{"cliSpecialKeyword":"tinaturner","cliSpecialKeywordInstructions":"","licence":{"extras":[""]},"various":{"devDependencies":["@types/lodash.pullall","@types/lodash.uniq","tempy"]}}},"email-comb":{"version":"6.1.3","description":"Remove unused CSS from email templates","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ comb, defaults, version }","various":{"devDependencies":["@types/lodash.intersection","@types/lodash.pullall","@types/lodash.uniq"]}}},"email-homey":{"version":"3.0.4","description":"Generate homepage in the Browsersync root with links/screenshots to all your email templates","bin":{"homey":"cli.js"},"lect":{"licence":{"extras":[""]},"various":{"devDependencies":["@types/lodash.uniq"]}}},"emlint":{"version":"5.0.7","description":"Pluggable email template code linter","bin":{"emlint":"bin/cli.js"},"lect":{"licence":{"extras":[""]},"req":"{ Linter, version }","special":true,"various":{"devDependencies":["@types/he","@types/lodash.clonedeep","@types/lodash.isregexp","@types/mime-db","ast-deep-contains","ranges-apply"]}}},"generate-atomic-css":{"version":"2.0.7","description":"Generate Atomic CSS","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ genAtomic, version, headsAndTails, extractFromToSource }","various":{"devDependencies":[]}}},"generate-atomic-css-cli":{"version":"2.0.7","description":"Generates and updates all HTML templates' atomic CSS","bin":{"gac":"cli.js"},"lect":{"licence":{"extras":[""]},"various":{"devDependencies":[]}}},"gulp-email-remove-unused-css":{"version":"4.0.7","description":"Gulp plugin to remove unused CSS classes/id's from styles in HTML HEAD and inline within BODY","bin":false,"lect":{"licence":{"extras":[""]},"various":{"devDependencies":["map-stream","tempy","vinyl-string"]}}},"helga":{"version":"2.0.7","description":"Your next best friend when editing complex nested code","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ helga, defaults, version }","various":{"devDependencies":[]}}},"html-all-known-attributes":{"version":"5.0.7","description":"All HTML attributes known to the Humanity","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ allHtmlAttribs }","various":{"devDependencies":[]}}},"html-crush":{"version":"5.0.7","description":"Minifies HTML/CSS: valid or broken, pure or mixed with other languages","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ crush, defaults, version }","various":{"devDependencies":["@babel/polyfill","node-fetch","p-map"]}}},"html-entities-not-email-friendly":{"version":"0.6.7","description":"All HTML entities which are not email template friendly","bin":false,"lect":{"licence":{"extras":[""]},"req":"{\n  notEmailFriendly,\n  notEmailFriendlySetOnly,\n  notEmailFriendlyLowercaseSetOnly,\n  notEmailFriendlyMinLength,\n  notEmailFriendlyMaxLength\n}","various":{"devDependencies":[]}}},"html-img-alt":{"version":"3.0.7","description":"Adds missing alt attributes to img tags. Non-parsing.","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ alts }","various":{"devDependencies":[]}}},"html-table-patcher":{"version":"5.0.7","description":"Visual helper to place templating code around table tags into correct places","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ patcher, defaults, version }","various":{"devDependencies":[]}}},"is-char-suitable-for-html-attr-name":{"version":"3.0.7","description":"Is given character suitable to be in an HTML attribute's name?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isAttrNameChar }","various":{"devDependencies":[]}}},"is-html-attribute-closing":{"version":"3.0.7","description":"Is a character on a given index a closing of an HTML attribute?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isAttrClosing }","various":{"devDependencies":[]}}},"is-html-tag-opening":{"version":"3.0.7","description":"Does an HTML tag start at given position?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isOpening }","various":{"devDependencies":["test-mixer"]}}},"is-language-code":{"version":"4.0.7","description":"Is given string a language code (as per IANA)","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isLangCode }","various":{"devDependencies":[]}}},"is-media-descriptor":{"version":"4.0.7","description":"Is given string a valid media descriptor (including media query)?","bin":false,"lect":{"licence":{"extras":[]},"req":"{ isMediaD }","various":{"devDependencies":["ranges-apply"]}}},"is-relative-uri":{"version":"4.0.7","description":"Is given string a relative URI?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isRel }","various":{"devDependencies":["ranges-apply"]}}},"js-row-num":{"version":"5.0.7","description":"Update all row numbers in all console.logs in JS code","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ fixRowNums }","various":{"devDependencies":[]}}},"js-row-num-cli":{"version":"2.0.7","description":"Update all row numbers in all console.logs in JS code","bin":{"jrn":"cli.js","jsrownum":"cli.js"},"lect":{"licence":{"extras":[""]},"various":{"devDependencies":[]}}},"json-comb":{"version":"0.6.7","description":"Command line app to manage sets of JSON files","bin":{"jsoncomb":"cli.js"},"lect":{"licence":{"extras":[""]},"various":{"devDependencies":[]}}},"json-comb-core":{"version":"7.0.7","description":"The inner core of json-comb","bin":false,"lect":{"licence":{"extras":[""]},"req":"{\n  getKeysetSync,\n  getKeyset,\n  enforceKeyset,\n  enforceKeysetSync,\n  sortAllObjectsSync,\n  noNewKeysSync,\n  findUnusedSync\n}","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.includes"]}}},"json-sort-cli":{"version":"2.0.7","description":"Command line app to deep sort JSON files, retains package.json special key order","bin":{"jsonsort":"cli.js","sortjson":"cli.js"},"lect":{"licence":{"extras":[""]},"various":{"devDependencies":["@types/lodash.isplainobject","p-map"]}}},"json-variables":{"version":"11.0.7","description":"Resolves custom-marked, cross-referenced paths in parsed JSON","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ jVar }","various":{"devDependencies":[]}}},"lect":{"version":"0.18.7","description":"Maintenance CLI for internal consumption","bin":{"lect":"cli.js"},"lect":{"licence":{"extras":[""]},"various":{"devDependencies":["@types/lodash.camelcase","@types/lodash.chunk","@types/lodash.clonedeep","@types/lodash.isequal","@types/lodash.isplainobject","@types/lodash.partition","@types/lodash.trim"]}}},"lerna-clean-changelogs":{"version":"3.0.7","description":"Removes frivolous entries from commitizen generated changelogs","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ cleanChangelogs }","various":{"devDependencies":[]}}},"lerna-clean-changelogs-cli":{"version":"2.0.7","description":"CLI application to cleanse the lerna/commitizen-generated changelogs","bin":{"lcc":"cli.js","lernacleanchangelog":"cli.js"},"lect":{"cliSpecialKeyword":"","cliSpecialKeywordInstructions":"","licence":{"extras":[""]},"various":{"devDependencies":["p-map"]}}},"lerna-link-dep":{"version":"2.0.4","description":"Like lerna add but does just the symlinking, works on CLI bins too","bin":{"deplink":"cli.js","johnnydepp":"cli.js","linkdep":"cli.js"},"lect":{"cliSpecialKeyword":"johnnydepp","cliSpecialKeywordInstructions":"remember the actor, DEPP as in _Johnny Dependency_ - just type his full name and surname.","licence":{"extras":[""]},"various":{"devDependencies":[]}}},"line-column-mini":{"version":"2.0.7","description":"Convert string index to line-column position","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ lineCol, getLineStartIndexes }","various":{"devDependencies":[]}}},"object-all-values-equal-to":{"version":"3.0.7","description":"Does the AST/nested-plain-object/array/whatever contain only one kind of value?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ allEq }","various":{"devDependencies":["@types/lodash.isequal","@types/lodash.isplainobject"]}}},"object-boolean-combinations":{"version":"5.0.7","description":"Consumes a defaults object with booleans, generates all possible variations of it","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ combinations }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.intersection","@types/lodash.isplainobject","@types/lodash.pull"]}}},"object-delete-key":{"version":"3.0.7","description":"Delete keys from all arrays or plain objects, nested within anything, by key or by value or by both, and clean up afterwards. Accepts wildcards.","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ deleteKey }","various":{"devDependencies":["@types/lodash.clonedeep","eslint"]}}},"object-fill-missing-keys":{"version":"9.0.7","description":"Add missing keys into plain objects, according to a reference object","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ fillMissing }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"object-flatten-all-arrays":{"version":"6.0.7","description":"Merge and flatten any arrays found in all values within plain objects","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ flattenAllArrays }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject","@types/lodash.merge"]}}},"object-flatten-referencing":{"version":"6.0.7","description":"Flatten complex nested objects according to a reference objects","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ flattenReferencing }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"object-merge-advanced":{"version":"13.0.7","description":"Recursively, deeply merge of anything (objects, arrays, strings or nested thereof), which weighs contents by type hierarchy to ensure the maximum content is retained","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ mergeAdvanced }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.includes","@types/lodash.isdate","@types/lodash.isplainobject","@types/lodash.uniq","deep-equal"]}}},"object-no-new-keys":{"version":"4.0.7","description":"Check, does a plain object (AST/JSON) has any unique keys, not present in a reference object (another AST/JSON)","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ noNewKeys }","various":{"devDependencies":["type-fest"]}}},"object-set-all-values-to":{"version":"5.0.7","description":"Recursively walk the input and set all found values in plain objects to something","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ setAllValuesTo }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"perf-ref":{"version":"1.0.3","description":"A dummy program to normalise perf scores against it","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ perfRef, opsPerSec, version }","various":{"devDependencies":[]}}},"ranges-apply":{"version":"6.0.7","description":"Take an array of string index ranges, delete/replace the string according to them","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rApply }","various":{"devDependencies":[]}}},"ranges-crop":{"version":"5.0.7","description":"Crop array of ranges when they go beyond the reference string's length","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rCrop }","various":{"devDependencies":["lodash.clonedeep","ranges-apply"]}}},"ranges-ent-decode":{"version":"5.0.7","description":"Recursive HTML entity decoding for Ranges workflow","bin":false,"lect":{"licence":{"extras":["","Some tests and some regexes adapted from he.js\nMIT Licence - Copyright Â© 2013-2018 Mathias Bynens <https://mathiasbynens.be/>\nhttps://github.com/mathiasbynens/he"]},"req":"{ rEntDecode }","various":{"devDependencies":["@types/lodash.isplainobject"]}}},"ranges-invert":{"version":"5.0.7","description":"Invert string index ranges","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rInvert }","various":{"devDependencies":[]}}},"ranges-is-index-within":{"version":"3.0.7","description":"Checks if index is within any of the given string index ranges","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isIndexWithin }","various":{"devDependencies":[]}}},"ranges-iterate":{"version":"3.0.7","description":"Iterate a string and any changes within given string index ranges","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rIterate }","various":{"devDependencies":["ranges-apply","ranges-merge"]}}},"ranges-merge":{"version":"8.0.7","description":"Merge and sort string index ranges","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rMerge }","various":{"devDependencies":["lodash.clonedeep"]}}},"ranges-offset":{"version":"3.0.7","description":"Increment or decrement each index in every range","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rOffset }","various":{"devDependencies":[]}}},"ranges-process-outside":{"version":"5.0.7","description":"Iterate string considering ranges, as if they were already applied","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rProcessOutside }","various":{"devDependencies":["@types/runes"]}}},"ranges-push":{"version":"6.0.7","description":"Gather string index ranges","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ Ranges }","various":{"devDependencies":[]}}},"ranges-regex":{"version":"5.0.7","description":"Integrate regex operations into Ranges workflow","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rRegex }","various":{"devDependencies":["@types/lodash.isregexp","ranges-apply"]}}},"ranges-sort":{"version":"5.0.7","description":"Sort string index ranges","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ rSort }","various":{"devDependencies":[]}}},"regex-empty-conditional-comments":{"version":"2.0.7","description":"Regular expression for matching HTML empty conditional comments","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ emptyCondCommentRegex }","various":{"devDependencies":[]}}},"regex-is-jinja-nunjucks":{"version":"3.0.7","description":"Regular expression for detecting Jinja or Nunjucks code","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isJinjaNunjucksRegex }","various":{"devDependencies":[]}}},"regex-is-jsp":{"version":"3.0.7","description":"Regular expression for detecting JSP (Java Server Pages) code","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isJSP }","various":{"devDependencies":[]}}},"regex-jinja-specific":{"version":"3.0.7","description":"Regular expression for detecting Python-specific Jinja code","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isJinjaSpecific }","various":{"devDependencies":[]}}},"str-indexes-of-plus":{"version":"4.0.7","description":"Like indexOf but returns array and counts per-grapheme","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ strIndexesOfPlus }","various":{"devDependencies":[]}}},"string-apostrophes":{"version":"2.0.7","description":"Comprehensive, HTML-entities-aware tool to typographically-correct the apostrophes and single/double quotes","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ convertOne, convertAll }","various":{"devDependencies":[]}}},"string-character-is-astral-surrogate":{"version":"2.0.7","description":"Tells, is given character a part of astral character, specifically, a high and low surrogate","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ isHighSurrogate, isLowSurrogate }","various":{"devDependencies":[]}}},"string-collapse-leading-whitespace":{"version":"6.0.7","description":"Collapse the leading and trailing whitespace of a string","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ collWhitespace }","various":{"devDependencies":[]}}},"string-collapse-white-space":{"version":"10.0.7","description":"Replace chunks of whitespace with a single spaces","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ collapse }","various":{"devDependencies":["test-mixer"]}}},"string-convert-indexes":{"version":"5.0.7","description":"Convert between native JS string character indexes and grapheme-count-based indexes","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ nativeToUnicode, unicodeToNative }","various":{"devDependencies":[]}}},"string-extract-class-names":{"version":"7.0.7","description":"Extracts CSS class/id names from a string","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ extract }","various":{"devDependencies":[]}}},"string-extract-sass-vars":{"version":"3.0.7","description":"Parse SASS variables file into a plain object of CSS key-value pairs","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ extractVars }","various":{"devDependencies":[]}}},"string-find-heads-tails":{"version":"5.0.7","description":"Finds where are arbitrary templating marker heads and tails located","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ strFindHeadsTails }","various":{"devDependencies":[]}}},"string-find-malformed":{"version":"3.0.7","description":"Search for a malformed string. Think of Levenshtein distance but in search.","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ findMalformed }","various":{"devDependencies":[]}}},"string-fix-broken-named-entities":{"version":"6.0.7","description":"Finds and fixes common and not so common broken named HTML entities, returns ranges array of fixes","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ fixEnt }","various":{"devDependencies":["@types/lodash.clonedeep"]}}},"string-left-right":{"version":"5.0.7","description":"Looks up the first non-whitespace character to the left/right of a given index","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ left, right, leftSeq, rightSeq, chompLeft, chompRight, leftStopAtNewLines, rightStopAtNewLines }","various":{"devDependencies":["@types/lodash.clonedeep","@types/lodash.isplainobject"]}}},"string-match-left-right":{"version":"8.0.7","description":"Match substrings on the left or right of a given index, ignoring whitespace","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ matchLeftIncl, matchRightIncl, matchLeft, matchRight }","various":{"devDependencies":["@types/lodash.isplainobject"]}}},"string-overlap-one-on-another":{"version":"3.0.7","description":"Lay one string on top of another, with an optional offset","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ overlap }","various":{"devDependencies":[]}}},"string-process-comma-separated":{"version":"3.0.7","description":"Extracts chunks from possibly comma or whatever-separated string","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ processCommaSep }","various":{"devDependencies":[]}}},"string-range-expander":{"version":"3.0.7","description":"Expands string index ranges within whitespace boundaries until letters are met","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ expander }","various":{"devDependencies":[]}}},"string-remove-duplicate-heads-tails":{"version":"6.0.7","description":"Detect and (recursively) remove head and tail wrappings around the input string","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ remDup }","various":{"devDependencies":["@types/lodash.isplainobject"]}}},"string-remove-thousand-separators":{"version":"6.0.7","description":"Detects and removes thousand separators (dot/comma/quote/space) from string-type digits","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ remSep }","various":{"devDependencies":["@types/lodash.trim"]}}},"string-remove-widows":{"version":"3.0.7","description":"Helps to prevent widow words in a text","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ removeWidows, defaults, version }","various":{"devDependencies":[]}}},"string-split-by-whitespace":{"version":"3.0.7","description":"Split string into array by chunks of whitespace","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ splitByW }","various":{"devDependencies":["string-find-heads-tails"]}}},"string-strip-html":{"version":"9.1.1","description":"Strips HTML tags from strings. No parser, accepts mixed sources.","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ stripHtml }","various":{"devDependencies":["@types/lodash.isplainobject","@types/lodash.trim","@types/lodash.without","ranges-invert","title"]}}},"string-trim-spaces-only":{"version":"4.0.7","description":"Like String.trim() but you can choose granularly what to trim","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ trimSpaces }","various":{"devDependencies":[]}}},"string-uglify":{"version":"2.0.7","description":"Shorten sets of strings deterministically, to be git-friendly","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ uglifyById, uglifyArr, version }","various":{"devDependencies":[]}}},"string-unfancy":{"version":"5.0.7","description":"Replace all n/m dashes, curly quotes with their simpler equivalents","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ unfancy }","various":{"devDependencies":["@types/he"]}}},"stristri":{"version":"4.0.7","description":"Extracts or deletes HTML, CSS, text and/or templating tags from string","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ stri }","various":{"devDependencies":["lodash.clonedeep","object-path","test-mixer"]}}},"tap-parse-string-to-object":{"version":"3.0.7","description":"Parses raw Tap: string-to-object or stream-to-a-promise-of-an-object","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ parseTap }","various":{"devDependencies":["@types/isstream","@types/split2","@types/through2","eslint-plugin-node","fs-extra","tempy"]}}},"test-mixer":{"version":"3.0.7","description":"Test helper to generate function opts object variations","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ mixer }","various":{"devDependencies":["@types/lodash.clonedeep"]}}},"update-versions":{"version":"5.0.7","description":"Like npm-check-updates but supports Lerna monorepos and enforces strict semver values","bin":{"upd":"cli.js"},"lect":{"licence":{"extras":["uses adapted p-progress, MIT Licence, Copyright (c) Sindre Sorhus https://github.com/sindresorhus/p-progress/blob/master/license"]},"various":{"devDependencies":["@types/lodash.isplainobject","fs-extra","lodash.clonedeep"]}}},"util-array-object-or-both":{"version":"4.0.7","description":"Validate and normalise user choice: array, object or both?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ arrObjOrBoth }","various":{"devDependencies":["@types/lodash.includes"]}}},"util-nonempty":{"version":"4.0.7","description":"Is the input (plain object, array, string or whatever) not empty?","bin":false,"lect":{"licence":{"extras":[""]},"req":"{ nonEmpty }","various":{"devDependencies":["@types/lodash.isplainobject"]}}},"eslint-plugin-row-num":{"version":"2.0.1","description":"ESLint plugin to update row numbers on each console.log","bin":false,"lect":false},"eslint-plugin-test-num":{"version":"2.0.1","description":"ESLint plugin to update unit test numbers automatically","bin":false,"lect":false}}