{
  "name": "string-find-malformed",
  "version": "3.0.8",
  "description": "Search for a malformed string. Think of Levenshtein distance but in search.",
  "keywords": [
    "character",
    "find",
    "fuzzy",
    "levenshtein",
    "lint",
    "look",
    "match",
    "matches",
    "search",
    "similar",
    "string",
    "text",
    "validate"
  ],
  "homepage": "https://codsen.com/os/string-find-malformed/",
  "repository": {
    "type": "git",
    "url": "https://github.com/codsen/codsen.git",
    "directory": "packages/string-find-malformed"
  },
  "license": "MIT",
  "author": {
    "name": "Roy Revelt",
    "email": "roy@codsen.com",
    "url": "https://codsen.com"
  },
  "type": "module",
  "exports": {
    "script": "./dist/string-find-malformed.umd.js",
    "default": "./dist/string-find-malformed.esm.js"
  },
  "types": "types/index.d.ts",
  "scripts": {
    "build": "node '../../ops/scripts/esbuild.js' && npm run dts",
    "dev": "DEV=true node '../../ops/scripts/esbuild.js' && npm run dts",
    "dts": "rollup -c",
    "examples": "node '../../ops/scripts/run-examples.js'",
    "lect": "node '../../ops/lect/lect.js'",
    "letspublish": "npm publish || :",
    "lint": "eslint . --fix",
    "perf": "node perf/check.js",
    "prepare": "echo 'ready'",
    "pretest": "npm run lect && npm run build",
    "test": "c8 npm run unit && npm run examples && npm run lint",
    "unit": "uvu test"
  },
  "engines": {
    "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
  },
  "c8": {
    "check-coverage": true,
    "exclude": [
      "**/test/**/*.*"
    ],
    "lines": 100
  },
  "lect": {
    "licence": {
      "extras": [
        ""
      ]
    }
  },
  "dependencies": {
    "string-left-right": "^5.0.8"
  }
}
