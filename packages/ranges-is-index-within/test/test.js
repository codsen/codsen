import { test } from "uvu";
/* eslint-disable @typescript-eslint/no-unused-vars */
import { equal, is, ok, throws, type, not, match } from "uvu/assert";

import { isIndexWithin as wthn } from "../dist/ranges-is-index-within.esm.js";

// ==============================
// 01. One range
// ==============================

test("01 - one range, both defaults and inclusive", () => {
  equal(wthn(1, [[0, 3]]), true, "01.01");
  equal(wthn(0, [[0, 3]]), false, "01.02");
  equal(wthn(0, [[0, 3]], { inclusiveRangeEnds: true }), true, "01.03");
  equal(wthn(3, [[0, 3]]), false, "01.04");
  equal(wthn(3, [[0, 3]], { inclusiveRangeEnds: true }), true, "01.05");
  equal(wthn(99, [[0, 3]]), false, "01.06");
  equal(wthn(99, [[0, 3]], { inclusiveRangeEnds: true }), false, "01.07");
  equal(wthn(99, null, { inclusiveRangeEnds: true }), false, "01.08");
  equal(wthn(0, null), false, "01.09");
});

test("02 - one range, opts.returnMatchedRangeInsteadOfTrue", () => {
  equal(
    wthn(1, [[0, 3]], { returnMatchedRangeInsteadOfTrue: true }),
    [0, 3],
    "02.01",
  );
  equal(
    wthn(0, [[0, 3]], { returnMatchedRangeInsteadOfTrue: true }),
    false,
    "02.02",
  );
  equal(
    wthn(0, [[0, 3]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    [0, 3],
    "02.03",
  );
  equal(
    wthn(3, [[0, 3]], { returnMatchedRangeInsteadOfTrue: true }),
    false,
    "02.04",
  );
  equal(
    wthn(3, [[0, 3]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    [0, 3],
    "02.05",
  );
  equal(
    wthn(99, [[0, 3]], { returnMatchedRangeInsteadOfTrue: true }),
    false,
    "02.06",
  );
  equal(
    wthn(99, [[0, 3]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "02.07",
  );
});

// ==============================
// 02. Two ranges
// ==============================

test("03 - two ranges, edges on defaults", () => {
  equal(
    wthn(1, [
      [2, 4],
      [6, 8],
    ]),
    false,
    "03.01",
  );
  equal(
    wthn(5, [
      [2, 4],
      [6, 8],
    ]),
    false,
    "03.02",
  );
  equal(
    wthn(9, [
      [2, 4],
      [6, 8],
    ]),
    false,
    "03.03",
  );
  equal(
    wthn(3, [
      [2, 4],
      [6, 8],
    ]),
    true,
    "03.04",
  );
  equal(
    wthn(7, [
      [2, 4],
      [6, 8],
    ]),
    true,
    "03.05",
  );
});

test("04 - two ranges, edges inclusive", () => {
  // same as 02.01
  equal(
    wthn(
      1,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    false,
    "04.01",
  );
  equal(
    wthn(
      5,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    false,
    "04.02",
  );
  equal(
    wthn(
      9,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    false,
    "04.03",
  );
  equal(
    wthn(
      3,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "04.04",
  );
  equal(
    wthn(
      7,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "04.05",
  );

  // checking range edges:
  equal(
    wthn(
      2,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "04.06",
  );
  equal(
    wthn(
      4,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "04.07",
  );
  equal(
    wthn(
      6,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "04.08",
  );
  equal(
    wthn(
      8,
      [
        [2, 4],
        [6, 8],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "04.09",
  );
});

test("05 - two ranges, opts.returnMatchedRangeInsteadOfTrue, edges on defaults", () => {
  equal(
    wthn(
      1,
      [
        [2, 4],
        [6, 8],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "05.01",
  );
  equal(
    wthn(
      5,
      [
        [2, 4],
        [6, 8],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "05.02",
  );
  equal(
    wthn(
      9,
      [
        [2, 4],
        [6, 8],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "05.03",
  );
  equal(
    wthn(
      3,
      [
        [2, 4],
        [6, 8],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [2, 4],
    "05.04",
  );
  equal(
    wthn(
      7,
      [
        [2, 4],
        [6, 8],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [6, 8],
    "05.05",
  );
});

test("06 - two ranges, opts.returnMatchedRangeInsteadOfTrue, edges inclusive", () => {
  // same as 02.01
  equal(
    wthn(
      1,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "06.01",
  );
  equal(
    wthn(
      5,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "06.02",
  );
  equal(
    wthn(
      9,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "06.03",
  );
  equal(
    wthn(
      3,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [2, 4],
    "06.04",
  );
  equal(
    wthn(
      7,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [6, 8],
    "06.05",
  );
  // checking range edges:
  equal(
    wthn(
      2,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [2, 4],
    "06.06",
  );
  equal(
    wthn(
      4,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [2, 4],
    "06.07",
  );
  equal(
    wthn(
      6,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [6, 8],
    "06.08",
  );
  equal(
    wthn(
      8,
      [
        [2, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [6, 8],
    "06.09",
  );
  equal(
    wthn(
      0,
      [
        [0, 4],
        [6, 8],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [0, 4],
    "06.10",
  );
});

// ==============================
// 03. Many ranges
// ==============================

test("07 - more than two ranges, uneven count, not inclusive", () => {
  equal(
    wthn(5, [
      [2, 4],
      [6, 8],
      [10, 15],
      [20, 30],
      [35, 40],
      [45, 50],
      [55, 60],
    ]),
    false,
    "07.01",
  );
  equal(
    wthn(
      5,
      [
        [2, 4],
        [6, 8],
        [10, 15],
        [20, 30],
        [35, 40],
        [45, 50],
        [55, 60],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "07.02",
  );
  equal(
    wthn(
      5,
      [
        [2, 4],
        [6, 8],
        [10, 15],
        [20, 30],
        [35, 40],
        [45, 50],
        [55, 60],
      ],
      { inclusiveRangeEnds: true },
    ),
    false,
    "07.03",
  );
  equal(
    wthn(
      5,
      [
        [2, 4],
        [6, 8],
        [10, 15],
        [20, 30],
        [35, 40],
        [45, 50],
        [55, 60],
      ],
      { returnMatchedRangeInsteadOfTrue: true, inclusiveRangeEnds: true },
    ),
    false,
    "07.04",
  );
});

test("08 - even more ranges, not inclusive", () => {
  equal(
    wthn(0, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.01",
  );
  equal(
    wthn(
      0,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.02",
  );
  equal(
    wthn(1, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.03",
  );
  equal(
    wthn(
      1,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.04",
  );
  equal(
    wthn(2, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.05",
  );
  equal(
    wthn(3, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.06",
  );
  equal(
    wthn(4, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.07",
  );
  equal(
    wthn(5, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.08",
  );
  equal(
    wthn(
      5,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.09",
  );
  equal(
    wthn(6, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.10",
  );
  equal(
    wthn(
      6,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [5, 10],
    "08.11",
  );
  equal(
    wthn(7, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.12",
  );
  equal(
    wthn(
      7,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [5, 10],
    "08.13",
  );
  equal(
    wthn(8, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.14",
  );
  equal(
    wthn(
      8,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [5, 10],
    "08.15",
  );
  equal(
    wthn(9, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.16",
  );
  equal(
    wthn(
      9,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [5, 10],
    "08.17",
  );
  equal(
    wthn(10, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.18",
  );
  equal(
    wthn(
      10,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.19",
  );
  equal(
    wthn(11, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.20",
  );
  equal(
    wthn(
      11,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.21",
  );
  equal(
    wthn(12, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.22",
  );
  equal(
    wthn(13, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.23",
  );
  equal(
    wthn(14, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.24",
  );
  equal(
    wthn(15, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.25",
  );
  equal(
    wthn(
      15,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "08.26",
  );
  equal(
    wthn(
      15,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.27",
  );
  equal(
    wthn(
      15,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [15, 20],
    "08.28",
  );
  equal(
    wthn(16, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.29",
  );
  equal(
    wthn(
      16,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [15, 20],
    "08.30",
  );
  equal(
    wthn(17, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.31",
  );
  equal(
    wthn(18, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.32",
  );
  equal(
    wthn(19, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.33",
  );
  equal(
    wthn(20, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.34",
  );
  equal(
    wthn(
      20,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "08.35",
  );
  equal(
    wthn(
      20,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.36",
  );
  equal(
    wthn(
      20,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [15, 20],
    "08.37",
  );
  equal(
    wthn(21, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.38",
  );
  equal(
    wthn(22, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.39",
  );
  equal(
    wthn(23, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.40",
  );
  equal(
    wthn(24, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.41",
  );
  equal(
    wthn(25, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.42",
  );
  equal(
    wthn(26, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.43",
  );
  equal(
    wthn(27, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.44",
  );
  equal(
    wthn(28, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.45",
  );
  equal(
    wthn(29, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.46",
  );
  equal(
    wthn(30, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.47",
  );
  equal(
    wthn(31, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.48",
  );
  equal(
    wthn(32, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.49",
  );
  equal(
    wthn(33, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.50",
  );
  equal(
    wthn(34, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.51",
  );
  equal(
    wthn(35, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.52",
  );
  equal(
    wthn(36, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.53",
  );
  equal(
    wthn(37, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.54",
  );
  equal(
    wthn(38, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.55",
  );
  equal(
    wthn(39, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.56",
  );
  equal(
    wthn(40, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.57",
  );
  equal(
    wthn(41, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.58",
  );
  equal(
    wthn(42, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.59",
  );
  equal(
    wthn(43, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.60",
  );
  equal(
    wthn(44, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.61",
  );
  equal(
    wthn(45, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.62",
  );
  equal(
    wthn(46, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.63",
  );
  equal(
    wthn(47, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.64",
  );
  equal(
    wthn(48, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.65",
  );
  equal(
    wthn(49, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.66",
  );
  equal(
    wthn(50, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.67",
  );
  equal(
    wthn(51, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.68",
  );
  equal(
    wthn(52, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.69",
  );
  equal(
    wthn(53, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.70",
  );
  equal(
    wthn(54, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.71",
  );
  equal(
    wthn(55, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.72",
  );
  equal(
    wthn(
      55,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "08.73",
  );
  equal(
    wthn(
      55,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.74",
  );
  equal(
    wthn(
      55,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [55, 60],
    "08.75",
  );
  equal(
    wthn(56, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.76",
  );
  equal(
    wthn(
      56,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [55, 60],
    "08.77",
  );
  equal(
    wthn(57, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.78",
  );
  equal(
    wthn(58, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.79",
  );
  equal(
    wthn(59, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.80",
  );
  equal(
    wthn(60, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.81",
  );
  equal(
    wthn(61, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.82",
  );
  equal(
    wthn(62, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.83",
  );
  equal(
    wthn(63, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.84",
  );
  equal(
    wthn(64, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.85",
  );
  equal(
    wthn(
      64,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.86",
  );
  equal(
    wthn(65, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.87",
  );
  equal(
    wthn(
      65,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.88",
  );
  equal(
    wthn(66, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.89",
  );
  equal(
    wthn(
      66,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [65, 70],
    "08.90",
  );
  equal(
    wthn(67, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.91",
  );
  equal(
    wthn(68, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.92",
  );
  equal(
    wthn(
      68,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [65, 70],
    "08.93",
  );
  equal(
    wthn(69, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.94",
  );
  equal(
    wthn(70, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.95",
  );
  equal(
    wthn(71, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.96",
  );
  equal(
    wthn(72, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.97",
  );
  equal(
    wthn(73, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.98",
  );
  equal(
    wthn(74, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.99",
  );
  equal(
    wthn(75, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.100",
  );
  equal(
    wthn(76, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.101",
  );
  equal(
    wthn(
      76,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [75, 80],
    "08.102",
  );
  equal(
    wthn(77, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.103",
  );
  equal(
    wthn(78, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.104",
  );
  equal(
    wthn(79, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.105",
  );
  equal(
    wthn(80, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.106",
  );
  equal(
    wthn(81, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.107",
  );
  equal(
    wthn(82, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.108",
  );
  equal(
    wthn(83, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.109",
  );
  equal(
    wthn(84, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.110",
  );
  equal(
    wthn(85, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.111",
  );
  equal(
    wthn(86, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.112",
  );
  equal(
    wthn(
      86,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [85, 90],
    "08.113",
  );
  equal(
    wthn(87, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.114",
  );
  equal(
    wthn(88, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.115",
  );
  equal(
    wthn(89, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.116",
  );
  equal(
    wthn(90, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.117",
  );
  equal(
    wthn(91, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.118",
  );
  equal(
    wthn(92, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.119",
  );
  equal(
    wthn(93, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.120",
  );
  equal(
    wthn(94, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.121",
  );
  equal(
    wthn(95, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.122",
  );
  equal(
    wthn(96, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.123",
  );
  equal(
    wthn(97, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.124",
  );
  equal(
    wthn(
      97,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    [95, 100],
    "08.125",
  );
  equal(
    wthn(98, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.126",
  );
  equal(
    wthn(99, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "08.127",
  );
  equal(
    wthn(100, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "08.128",
  );
  equal(
    wthn(
      100,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "08.129",
  );
  equal(
    wthn(
      100,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.130",
  );
  equal(
    wthn(
      100,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [95, 100],
    "08.131",
  );

  //

  equal(
    wthn(
      105,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [105, 110],
    "08.132",
  );
  equal(
    wthn(
      110,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.133",
  );
  equal(
    wthn(
      112,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.134",
  );
  equal(
    wthn(
      116,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: false },
    ),
    true,
    "08.135",
  );
  equal(
    wthn(
      116,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    [115, 120],
    "08.136",
  );
  equal(
    wthn(
      120,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.137",
  );
  equal(
    wthn(
      124,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.138",
  );
  equal(
    wthn(
      124,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.139",
  );
  equal(
    wthn(
      124,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.140",
  );
  equal(
    wthn(
      124,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.141",
  );
  equal(
    wthn(
      126,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: false },
    ),
    true,
    "08.142",
  );
  equal(
    wthn(
      126,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: false },
    ),
    true,
    "08.143",
  );
  equal(
    wthn(
      126,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [125, 130],
    "08.144",
  );
  equal(
    wthn(
      126,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    [125, 130],
    "08.145",
  );

  equal(
    wthn(
      130,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.146",
  );
  equal(
    wthn(
      130,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [125, 130],
    "08.147",
  );
  equal(
    wthn(
      130,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.148",
  );
  equal(
    wthn(
      130,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: false },
    ),
    true,
    "08.149",
  );

  // outside of the range
  equal(
    wthn(
      131,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.150",
  );
  equal(
    wthn(
      131,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.151",
  );
  equal(
    wthn(
      131,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.152",
  );
  equal(
    wthn(
      131,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.153",
  );
  equal(
    wthn(
      132,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.154",
  );
  equal(
    wthn(
      132,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.155",
  );
  equal(
    wthn(
      132,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: false },
    ),
    false,
    "08.156",
  );
  equal(
    wthn(
      132,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: false, returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "08.157",
  );
});

test("09 - small ranges - zero", () => {
  equal(wthn(0, [[0, 1]]), false, "09.01");
  equal(wthn(0, [[0, 1]], { inclusiveRangeEnds: false }), false, "09.02");
  equal(wthn(0, [[0, 1]], { inclusiveRangeEnds: true }), true, "09.03");
  equal(
    wthn(0, [
      [0, 1],
      [2, 3],
    ]),
    false,
    "09.04",
  );
  equal(
    wthn(0, [
      [0, 1],
      [1, 3],
    ]),
    false,
    "09.05",
  );
  equal(
    wthn(0, [
      [0, 1],
      [0, 3],
    ]),
    false,
    "09.06",
  );
  equal(
    wthn(0, [
      [0, 10],
      [0, 3],
    ]),
    false,
    "09.07",
  );
  equal(
    wthn(
      0,
      [
        [0, 10],
        [0, 3],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "09.08",
  );
  equal(
    wthn(
      0,
      [
        [1, 10],
        [0, 3],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "09.09",
  );

  // returnMatchedRangeInsteadOfTrue: true

  equal(
    wthn(0, [[0, 1]], { returnMatchedRangeInsteadOfTrue: true }),
    false,
    "09.10",
  );
  equal(
    wthn(0, [[0, 1]], {
      inclusiveRangeEnds: false,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "09.11",
  );
  equal(
    wthn(0, [[0, 1]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    [0, 1],
    "09.12",
  );
  equal(
    wthn(
      0,
      [
        [0, 1],
        [2, 3],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "09.13",
  );
  equal(
    wthn(
      0,
      [
        [0, 1],
        [1, 3],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "09.14",
  );
  equal(
    wthn(
      0,
      [
        [0, 1],
        [0, 3],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "09.15",
  );
  equal(
    wthn(
      0,
      [
        [0, 10],
        [0, 3],
      ],
      { returnMatchedRangeInsteadOfTrue: true },
    ),
    false,
    "09.16",
  );
  equal(
    wthn(
      0,
      [
        [0, 10],
        [0, 3],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [0, 10],
    "09.17",
  );
  equal(
    wthn(
      0,
      [
        [1, 10],
        [0, 3],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [0, 3],
    "09.18",
  );
});

test("10 - small ranges - one", () => {
  equal(wthn(1, [[0, 1]]), false, "10.01");
  equal(wthn(1, [[0, 1]], { inclusiveRangeEnds: false }), false, "10.02");
  equal(wthn(1, [[0, 1]], { inclusiveRangeEnds: true }), true, "10.03");

  // opts.returnMatchedRangeInsteadOfTrue
  equal(
    wthn(1, [[0, 1]], { returnMatchedRangeInsteadOfTrue: true }),
    false,
    "10.04",
  );
  equal(
    wthn(1, [[0, 1]], {
      inclusiveRangeEnds: false,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "10.05",
  );
  equal(
    wthn(1, [[0, 1]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    [0, 1],
    "10.06",
  );
});

test("11 - identical range endings", () => {
  equal(wthn(0, [[0, 0]], { inclusiveRangeEnds: false }), false, "11.01");
  equal(wthn(1, [[1, 1]], { inclusiveRangeEnds: false }), false, "11.02");
  equal(wthn(0, [[0, 0]], { inclusiveRangeEnds: true }), true, "11.03");
  equal(wthn(1, [[1, 1]], { inclusiveRangeEnds: true }), true, "11.04");
  equal(wthn(0, [[1, 1]], { inclusiveRangeEnds: true }), false, "11.05");
  equal(wthn(2, [[1, 1]], { inclusiveRangeEnds: true }), false, "11.06");
  equal(wthn(2, [[1, 1]], { inclusiveRangeEnds: false }), false, "11.07");
  equal(
    wthn(
      1,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      { inclusiveRangeEnds: false },
    ),
    false,
    "11.08",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      { inclusiveRangeEnds: false },
    ),
    false,
    "11.09",
  );
  equal(
    wthn(
      3,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      { inclusiveRangeEnds: false },
    ),
    false,
    "11.10",
  );
  equal(
    wthn(
      1,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "11.11",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "11.12",
  );
  equal(
    wthn(
      3,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      { inclusiveRangeEnds: true },
    ),
    true,
    "11.13",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [3, 3],
        [4, 4],
      ],
      { inclusiveRangeEnds: true },
    ),
    false,
    "11.14",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [3, 3],
        [4, 4],
      ],
      { inclusiveRangeEnds: false },
    ),
    false,
    "11.15",
  );

  // opts.returnMatchedRangeInsteadOfTrue
  equal(
    wthn(0, [[0, 0]], {
      inclusiveRangeEnds: false,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "11.16",
  );
  equal(
    wthn(1, [[1, 1]], {
      inclusiveRangeEnds: false,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "11.17",
  );
  equal(
    wthn(0, [[0, 0]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    [0, 0],
    "11.18",
  );
  equal(
    wthn(1, [[1, 1]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    [1, 1],
    "11.19",
  );
  equal(
    wthn(0, [[1, 1]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "11.20",
  );
  equal(
    wthn(2, [[1, 1]], {
      inclusiveRangeEnds: true,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "11.21",
  );
  equal(
    wthn(2, [[1, 1]], {
      inclusiveRangeEnds: false,
      returnMatchedRangeInsteadOfTrue: true,
    }),
    false,
    "11.22",
  );
  equal(
    wthn(
      1,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      {
        inclusiveRangeEnds: false,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "11.23",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      {
        inclusiveRangeEnds: false,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "11.24",
  );
  equal(
    wthn(
      3,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      {
        inclusiveRangeEnds: false,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "11.25",
  );
  equal(
    wthn(
      1,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [1, 1],
    "11.26",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [2, 2],
    "11.27",
  );
  equal(
    wthn(
      3,
      [
        [1, 1],
        [2, 2],
        [3, 3],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [3, 3],
    "11.28",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [3, 3],
        [4, 4],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "11.29",
  );
  equal(
    wthn(
      2,
      [
        [1, 1],
        [3, 3],
        [4, 4],
      ],
      {
        inclusiveRangeEnds: false,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    false,
    "11.30",
  );
});

// ==============================
// 4. AD-HOC
// ==============================

test("Ad-hoc #1", () => {
  equal(
    wthn(
      130,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40],
        [45, 50],
        [55, 60],
        [65, 70, 999], // irrelevant third element
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      { inclusiveRangeEnds: true, returnMatchedRangeInsteadOfTrue: true },
    ),
    [125, 130],
    "12.01",
  );
  equal(
    wthn(
      130,
      [
        [5, 10],
        [15, 20],
        [25, 30],
        [35, 40, 777], // irrelevant third element
        [45, 50],
        [55, 60],
        [65, 70],
        [75, 80],
        [85, 90],
        [95, 100],
        [105, 110],
        [115, 120],
        [125, 130],
      ],
      {
        inclusiveRangeEnds: true,
        returnMatchedRangeInsteadOfTrue: true,
      },
    ),
    [125, 130],
    "12.02",
  );
});

test("Ad-hoc #2", () => {
  equal(
    wthn(21, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    false,
    "13.01",
  );
});

test("Ad-hoc #3", () => {
  equal(
    wthn(6, [
      [5, 10],
      [15, 20],
      [25, 30],
      [35, 40],
      [45, 50],
      [55, 60],
      [65, 70],
      [75, 80],
      [85, 90],
      [95, 100],
      [105, 110],
      [115, 120],
      [125, 130],
    ]),
    true,
    "14.01",
  );
});

test.run();
