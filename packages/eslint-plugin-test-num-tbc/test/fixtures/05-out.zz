tap.test(
  `01 - ${`\u001b[${33}m${`basic`}\u001b[${39}m`} - replaces first and third arg digit chunks`,
  (t) => {
    const { output } = linter.verifyAndFix(read("01-in"), c);
    t.is(output, read("01-out"), "01");
    t.end();
  }
);

tap.test(
  `02 - ${`\u001b[${33}m${`basic`}\u001b[${39}m`} - grouped asserts`,
  (t) => {
    const { output } = linter.verifyAndFix(read("02-in"), c);
    t.is(output, read("02-out"), "02");
    t.end();
  }
);

tap.test(`03 - ${`\u001b[${33}m${`basic`}\u001b[${39}m`} - edge cases`, (t) => {
  const { output } = linter.verifyAndFix(read("03-in"), c);
  t.is(output, read("03-out"), "03");
  t.end();
});

tap.test(`04 - ${`\u001b[${33}m${`basic`}\u001b[${39}m`} - edge cases`, (t) => {
  const { output } = linter.verifyAndFix(read("03-in"), c);
  t.is(output, read("03-out"), "04");
  t.end();
});
